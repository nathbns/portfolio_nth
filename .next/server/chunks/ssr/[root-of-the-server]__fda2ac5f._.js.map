{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///Users/nath/Desktop/portfolio_nth/app/blog/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport Link from 'next/link';\n\ninterface BlogPost {\n  title: string;\n  date: string;\n  path: string;\n  category: string;\n  content: string;\n}\n\nasync function fetchBlogPosts(): Promise<BlogPost[]> {\n  try {\n    // Appel vers notre API Go pour récupérer les posts\n    const response = await fetch('http://localhost:8080/api/blog-posts', {\n      cache: 'no-cache',\n      next: { revalidate: 3600 } // Revalider toutes les heures\n    });\n    \n    if (!response.ok) {\n      throw new Error('Échec du chargement des articles');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Erreur lors du chargement des articles:', error);\n    return [];\n  }\n}\n\nfunction BlogPostCard({ post }: { post: BlogPost }) {\n  return (\n    <article className=\"border border-foreground/10 rounded-lg p-4 hover:border-foreground/20 transition-colors duration-200\">\n      <div className=\"flex flex-col space-y-2\">\n        <div className=\"flex items-center justify-between text-sm text-foreground/60\">\n          <span className=\"bg-foreground/5 px-2 py-1 rounded text-xs\">\n            {post.category}\n          </span>\n          <time dateTime={post.date}>{post.date}</time>\n        </div>\n        <h2 className=\"text-lg font-semibold text-foreground hover:text-foreground/80 transition-colors\">\n          <Link href={`/blog/post?path=${encodeURIComponent(post.path)}`} className=\"underline decoration-1 underline-offset-4 hover:decoration-2\">\n            {post.title}\n          </Link>\n        </h2>\n        <p className=\"text-sm text-foreground/70 line-clamp-3\">\n          {post.content.substring(0, 150)}...\n        </p>\n      </div>\n    </article>\n  );\n}\n\nfunction LoadingSkeleton() {\n  return (\n    <div className=\"space-y-4\">\n      {[...Array(6)].map((_, i) => (\n        <div key={i} className=\"border border-foreground/10 rounded-lg p-4\">\n          <div className=\"animate-pulse\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <div className=\"h-4 bg-foreground/10 rounded w-20\"></div>\n              <div className=\"h-4 bg-foreground/10 rounded w-24\"></div>\n            </div>\n            <div className=\"h-6 bg-foreground/10 rounded w-3/4 mb-2\"></div>\n            <div className=\"h-4 bg-foreground/10 rounded w-full\"></div>\n            <div className=\"h-4 bg-foreground/10 rounded w-2/3 mt-1\"></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nasync function BlogContent() {\n  const posts = await fetchBlogPosts();\n\n  if (posts.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-foreground/60\">Aucun article disponible pour le moment.</p>\n        <p className=\"text-sm text-foreground/40 mt-2\">\n          Assurez-vous que le service Go est en cours d'exécution.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n      {posts.map((post, index) => (\n        <BlogPostCard key={`${post.path}-${index}`} post={post} />\n      ))}\n    </div>\n  );\n}\n\nexport default function BlogPage() {\n  return (\n    <div className=\"pb-16 px-4 mx-auto max-w-4xl\">\n      <header className=\"mb-8\">\n        <div className=\"flex items-center gap-4 mb-4\">\n          <Link \n            href=\"/\" \n            className=\"text-foreground/60 hover:text-foreground transition-colors text-sm underline decoration-1 underline-offset-4\"\n          >\n            ← Back\n          </Link>\n        </div>\n        <h1 className=\"text-3xl font-bold mb-2\">Blog - Today I Learned</h1>\n        <p className=\"text-foreground/70\">\n          My daily learnings in computer science, machine learning and development.\n        </p>\n      </header>\n      \n      <main>\n        <Suspense fallback={<LoadingSkeleton />}>\n          <BlogContent />\n        </Suspense>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAUA,eAAe;IACb,IAAI;QACF,mDAAmD;QACnD,MAAM,WAAW,MAAM,MAAM,wCAAwC;YACnE,OAAO;YACP,MAAM;gBAAE,YAAY;YAAK,EAAE,8BAA8B;QAC3D;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2CAA2C;QACzD,OAAO,EAAE;IACX;AACF;AAEA,SAAS,aAAa,EAAE,IAAI,EAAsB;IAChD,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAK,WAAU;sCACb,KAAK,QAAQ;;;;;;sCAEhB,8OAAC;4BAAK,UAAU,KAAK,IAAI;sCAAG,KAAK,IAAI;;;;;;;;;;;;8BAEvC,8OAAC;oBAAG,WAAU;8BACZ,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,KAAK,IAAI,GAAG;wBAAE,WAAU;kCACvE,KAAK,KAAK;;;;;;;;;;;8BAGf,8OAAC;oBAAE,WAAU;;wBACV,KAAK,OAAO,CAAC,SAAS,CAAC,GAAG;wBAAK;;;;;;;;;;;;;;;;;;AAK1C;AAEA,SAAS;IACP,qBACE,8OAAC;QAAI,WAAU;kBACZ;eAAI,MAAM;SAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC;gBAAY,WAAU;0BACrB,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;;;;;8CACf,8OAAC;oCAAI,WAAU;;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;;;;;;;eART;;;;;;;;;;AAclB;AAEA,eAAe;IACb,MAAM,QAAQ,MAAM;IAEpB,IAAI,MAAM,MAAM,KAAK,GAAG;QACtB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAE,WAAU;8BAAqB;;;;;;8BAClC,8OAAC;oBAAE,WAAU;8BAAkC;;;;;;;;;;;;IAKrD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;gBAA2C,MAAM;eAA/B,GAAG,KAAK,IAAI,CAAC,CAAC,EAAE,OAAO;;;;;;;;;;AAIlD;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;kCAIH,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAKpC,8OAAC;0BACC,cAAA,8OAAC,qMAAA,CAAA,WAAQ;oBAAC,wBAAU,8OAAC;;;;;8BACnB,cAAA,8OAAC;;;;;;;;;;;;;;;;;;;;;AAKX","debugId":null}}]
}